services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: poker-client
    ports:
      - 5173:5173

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: poker-server
    depends_on:
      pg:
        condition: service_healthy
    ports:
      - 5000:5000
    volumes:
      - ./server:/app
    restart: always
    environment:
      PORT: 5000
      DB_URL: postgresql://postgres:root@pg:5432/sprint-poker
      LOG_LEVEL: -4
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://localhost:3100/loki/api/v1/push
    #     loki-retries: "5"
    #     loki-max-backoff: "750ms"
    #     loki-timeout: "1s"
    #     keep-file: "true"
    #     loki-external-labels: "job=poker-server"
    #
  pg:
    image: postgres:16.3-bookworm
    container_name: poker-pg
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    user: postgres
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: sprint-poker
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  #
  # loki:
  #   image: grafana/loki:2.9.2
  #   ports:
  #     - '3100:3100'
  #   command: -config.file=/etc/loki/local-config.yaml
  #   # networks:
  #   #   - loki
  #
  # grafana:
  #   environment:
  #     - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   entrypoint:
  #     - sh
  #     - -euc
  #     - |
  #       mkdir -p /etc/grafana/provisioning/datasources
  #       cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
  #       apiVersion: 1
  #       datasources:
  #       - name: Loki
  #         type: loki
  #         access: proxy
  #         orgId: 1
  #         url: http://loki:3100
  #         basicAuth: false
  #         isDefault: true
  #         version: 1
  #         editable: false
  #       EOF
  #       /run.sh
  #   image: grafana/grafana:latest
  #   ports:
  #     - '3000:3000'
  # networks:
  #   - loki
# networks:
#   loki:
